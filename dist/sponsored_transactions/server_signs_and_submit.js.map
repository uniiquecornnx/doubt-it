{"version":3,"sources":["../../sponsored_transactions/server_signs_and_submit.ts"],"sourcesContent":["/* eslint-disable no-console */\n\n/**\n * This example demostrates how one can generate and sign a transaction\n * on one server (for example, frontend) and have it serialized and send\n * it to another server (for example, backend) to deserialize and submit.\n */\n\nimport {\n  Account,\n  AccountAuthenticator,\n  Aptos,\n  AptosConfig,\n  Deserializer,\n  Network,\n  NetworkToNetworkName,\n  SimpleTransaction,\n} from \"@aptos-labs/ts-sdk\";\n\nconst INITIAL_BALANCE = 100_000_000;\nconst TRANSFER_AMOUNT = 100;\n\n// Default to devnet, but allow for overriding\nconst APTOS_NETWORK: Network = NetworkToNetworkName[process.env.APTOS_NETWORK] || Network.DEVNET;\n// Setup the client\nconst config = new AptosConfig({ network: APTOS_NETWORK });\nconst aptos = new Aptos(config);\n\nconst sendToOtherServer = async (\n  serializedTransaction: Uint8Array,\n  senderAuth: Uint8Array,\n  sponsorAuth: Uint8Array,\n) => {\n  // deserialize transaction\n  const deserializer = new Deserializer(serializedTransaction);\n  const transaction = SimpleTransaction.deserialize(deserializer);\n\n  // deserialize sender authenticator\n  const deserializer2 = new Deserializer(senderAuth);\n  const senderAuthenticator = AccountAuthenticator.deserialize(deserializer2);\n\n  // deserialize fee payer authenticator\n  const deserializer3 = new Deserializer(sponsorAuth);\n  const feePayerAuthenticator = AccountAuthenticator.deserialize(deserializer3);\n\n  const response = await aptos.transaction.submit.simple({\n    transaction,\n    senderAuthenticator,\n    feePayerAuthenticator,\n  });\n\n  const executedTransaction = await aptos.waitForTransaction({ transactionHash: response.hash });\n  console.log(\"executed transaction\", executedTransaction.hash);\n};\n\nconst example = async () => {\n  // Create two accounts\n  const alice = Account.generate();\n  const bob = Account.generate();\n  const sponsor = Account.generate();\n\n  console.log(\"=== Addresses ===\\n\");\n  console.log(`Alice's address is: ${alice.accountAddress}`);\n  console.log(`Bob's address is: ${bob.accountAddress}`);\n  console.log(`Sponsor's address is: ${sponsor.accountAddress}`);\n\n  // Fund the accounts\n  console.log(\"\\n=== Funding accounts ===\\n\");\n\n  await aptos.fundAccount({\n    accountAddress: alice.accountAddress,\n    amount: INITIAL_BALANCE,\n  });\n\n  await aptos.fundAccount({ accountAddress: sponsor.accountAddress, amount: INITIAL_BALANCE });\n\n  console.log(\"\\n=== Accounts funded ===\\n\");\n\n  const transaction = await aptos.transaction.build.simple({\n    sender: alice.accountAddress,\n    withFeePayer: true,\n    data: {\n      function: \"0x1::aptos_account::transfer\",\n      functionArguments: [bob.accountAddress, TRANSFER_AMOUNT],\n    },\n  });\n\n  // Alice signs\n  const senderAuth = aptos.transaction.sign({ signer: alice, transaction });\n\n  // Sponsor signs\n  const sponsorAuth = aptos.transaction.signAsFeePayer({ signer: sponsor, transaction });\n\n  // Send serialized data to server\n  await sendToOtherServer(transaction.bcsToBytes(), senderAuth.bcsToBytes(), sponsorAuth.bcsToBytes());\n};\n\nexample();\n"],"mappings":";AAQA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEP,IAAM,kBAAkB;AACxB,IAAM,kBAAkB;AAGxB,IAAM,gBAAyB,qBAAqB,QAAQ,IAAI,aAAa,KAAK,QAAQ;AAE1F,IAAM,SAAS,IAAI,YAAY,EAAE,SAAS,cAAc,CAAC;AACzD,IAAM,QAAQ,IAAI,MAAM,MAAM;AAE9B,IAAM,oBAAoB,OACxB,uBACA,YACA,gBACG;AAEH,QAAM,eAAe,IAAI,aAAa,qBAAqB;AAC3D,QAAM,cAAc,kBAAkB,YAAY,YAAY;AAG9D,QAAM,gBAAgB,IAAI,aAAa,UAAU;AACjD,QAAM,sBAAsB,qBAAqB,YAAY,aAAa;AAG1E,QAAM,gBAAgB,IAAI,aAAa,WAAW;AAClD,QAAM,wBAAwB,qBAAqB,YAAY,aAAa;AAE5E,QAAM,WAAW,MAAM,MAAM,YAAY,OAAO,OAAO;AAAA,IACrD;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,sBAAsB,MAAM,MAAM,mBAAmB,EAAE,iBAAiB,SAAS,KAAK,CAAC;AAC7F,UAAQ,IAAI,wBAAwB,oBAAoB,IAAI;AAC9D;AAEA,IAAM,UAAU,YAAY;AAE1B,QAAM,QAAQ,QAAQ,SAAS;AAC/B,QAAM,MAAM,QAAQ,SAAS;AAC7B,QAAM,UAAU,QAAQ,SAAS;AAEjC,UAAQ,IAAI,qBAAqB;AACjC,UAAQ,IAAI,uBAAuB,MAAM,cAAc,EAAE;AACzD,UAAQ,IAAI,qBAAqB,IAAI,cAAc,EAAE;AACrD,UAAQ,IAAI,yBAAyB,QAAQ,cAAc,EAAE;AAG7D,UAAQ,IAAI,8BAA8B;AAE1C,QAAM,MAAM,YAAY;AAAA,IACtB,gBAAgB,MAAM;AAAA,IACtB,QAAQ;AAAA,EACV,CAAC;AAED,QAAM,MAAM,YAAY,EAAE,gBAAgB,QAAQ,gBAAgB,QAAQ,gBAAgB,CAAC;AAE3F,UAAQ,IAAI,6BAA6B;AAEzC,QAAM,cAAc,MAAM,MAAM,YAAY,MAAM,OAAO;AAAA,IACvD,QAAQ,MAAM;AAAA,IACd,cAAc;AAAA,IACd,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,mBAAmB,CAAC,IAAI,gBAAgB,eAAe;AAAA,IACzD;AAAA,EACF,CAAC;AAGD,QAAM,aAAa,MAAM,YAAY,KAAK,EAAE,QAAQ,OAAO,YAAY,CAAC;AAGxE,QAAM,cAAc,MAAM,YAAY,eAAe,EAAE,QAAQ,SAAS,YAAY,CAAC;AAGrF,QAAM,kBAAkB,YAAY,WAAW,GAAG,WAAW,WAAW,GAAG,YAAY,WAAW,CAAC;AACrG;AAEA,QAAQ;","names":[]}